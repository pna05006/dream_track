# 
throttle_scans: 1 # (int, default: 1) Process 1 out of every this many scans (set it to a higher number to skip more scans)
# 
map_update_interval: 0.5 #(float, default: 5.0) #How long (in seconds) between updates to the map. Lowering this number updates the occupancy grid more often, at the expense of greater computational load.

maxUrange: 70.0 #(float, default: 80.0) The maximum usable range of the laser. A beam is cropped to this value.

sigma: 0.05 # (float, default: 0.05) The sigma used by the greedy endpoint matching

kernelSize: 1 # (int, default: 1) The kernel in which to look for a correspondence

lstep: 0.05 # (float, default: 0.05) The optimization step in translation

astep: 0.05 # (float, default: 0.05) The optimization step in rotation

iterations: 5 # (int, default: 5) The number of iterations of the scanmatcher

lsigma: 0.075 # (float, default: 0.075) The sigma of a beam used for likelihood computation

ogain: 3.0 # (float, default: 3.0) Gain to be used while evaluating the likelihood, for smoothing the resampling effects

lskip: 0.0 # (int, default: 0) Number of beams to skip in each scan. Take only every (n+1)th laser ray for computing a match (0 = take all rays)

minimumScore: 0.0 # (float, default: 0.0) Minimum score for considering the outcome of the scan matching good. Can avoid jumping pose estimates in large open spaces when using laser scanners with limited range (e.g. 5m). Scores go up to 600+, try 50 for example when experiencing jumping estimate issues.

srr: 0.1 # (float, default: 0.1) Odometry error in translation as a function of translation (rho/rho)

srt: 0.2 # (float, default: 0.2) Odometry error in translation as a function of rotation (rho/theta)

str: 0.1 # (float, default: 0.1) Odometry error in rotation as a function of translation (theta/rho)

stt: 0.2 # (float, default: 0.2) Odometry error in rotation as a function of rotation (theta/theta)

linearUpdate: 1.0 # (float, default: 1.0) Process a scan each time the robot translates this far

angularUpdate: 0.2 # (float, default: 0.5) Process a scan each time the robot rotates this far

temporalUpdate: 0.5 # (float, default: -1.0) Process a scan if the last scan processed is older than the update time in seconds. A value less than zero will turn time based updates off.

resampleThreshold: 0.5 # (float, default: 0.5) The Neff based resampling threshold

particles: 100 # (int, default: 30) Number of particles in the filter

# map size
xmin: -20.0 # (float, default: -100.0) Initial map size (in metres)
ymin: -20.0 # (float, default: -100.0) Initial map size (in metres)
xmax: 20.0 # (float, default: 100.0) Initial map size (in metres)
ymax: 20.0 # (float, default: 100.0) Initial map size (in metres)
# 
delta: 0.05 # (float, default: 0.05) Resolution of the map (in metres per occupancy grid block)
# 
llsamplerange: 0.01 # (float, default: 0.01) Translational sampling range for the likelihood

llsamplestep: 0.01 # (float, default: 0.01) Translational sampling step for the likelihood

lasamplerange: 0.005 # (float, default: 0.005) Angular sampling range for the likelihood

lasamplestep: 0.005 # (float, default: 0.005) Angular sampling step for the likelihood

transform_publish_period: 0.05 # (float, default: 0.05) How long (in seconds) between transform publications. To disable broadcasting transforms, set to 0.

# ~occ_thresh (float, default: 0.25)
# Threshold on gmapping's occupancy values. Cells with greater occupancy are considered occupied (i.e., set to 100 in the resulting sensor_msgs/LaserScan). New in 1.1.0.
# ~maxRange (float)
# The maximum range of the sensor. If regions with no obstacles within the range of the sensor should appear as free space in the map, set maxUrange < maximum range of the real sensor <= maxRange.